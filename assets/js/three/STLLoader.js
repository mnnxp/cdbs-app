import{BufferAttribute as e,BufferGeometry as t,FileLoader as r,Float32BufferAttribute as n,Loader as o,Vector3 as i}from"./three.module.js";class STLLoader extends o{constructor(e){super(e)}load(e,t,n,o){let i=this,l=new r(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(r){try{t(i.parse(r))}catch(n){o?o(n):console.error(n),i.manager.itemError(e)}},n,o)}parse(r){var o;function l(e,t,r){for(let n=0,o=e.length;n<o;n++)if(e[n]!==t.getUint8(r+n))return!1;return!0}let $=function e(t){if("string"!=typeof t)return t;{let r=new Uint8Array(t.length);for(let n=0;n<t.length;n++)r[n]=255&t.charCodeAt(n);return r.buffer||r}}(r);return!function e(t){let r=new DataView(t),n=r.getUint32(80,!0);if(84+50*n===r.byteLength)return!0;let o=[115,111,108,105,100];for(let i=0;i<5;i++)if(l(o,r,i))return!1;return!0}($)?function e(r){let o=new t,l=/solid([\s\S]*?)endsolid/g,$=/facet([\s\S]*?)endfacet/g,s=0,a=/[\s]+([+-]?(?:\d*)(?:\.\d*)?(?:[eE][+-]?\d+)?)/.source,u=RegExp("vertex"+a+a+a,"g"),f=RegExp("normal"+a+a+a,"g"),g=[],_=[],h=new i,c,d=0,w=0,x=0;for(;null!==(c=l.exec(r));){w=x;let p=c[0];for(;null!==(c=$.exec(p));){let m=0,F=0,U=c[0];for(;null!==(c=f.exec(U));)h.x=parseFloat(c[1]),h.y=parseFloat(c[2]),h.z=parseFloat(c[3]),F++;for(;null!==(c=u.exec(U));)g.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3])),_.push(h.x,h.y,h.z),m++,x++;1!==F&&console.error("THREE.STLLoader: Something isn't right with the normal of face number "+s),3!==m&&console.error("THREE.STLLoader: Something isn't right with the vertices of face number "+s),s++}let b=w,L=x-w;o.addGroup(b,L,d),d++}return o.setAttribute("position",new n(g,3)),o.setAttribute("normal",new n(_,3)),o}("string"!=typeof(o=r)?new TextDecoder().decode(o):o):function r(n){let o=new DataView(n),i=o.getUint32(80,!0),l,$,s,a=!1,u,f,g,_,h;for(let c=0;c<70;c++)1129270351==o.getUint32(c,!1)&&82==o.getUint8(c+4)&&61==o.getUint8(c+5)&&(a=!0,u=new Float32Array(9*i),f=o.getUint8(c+6)/255,g=o.getUint8(c+7)/255,_=o.getUint8(c+8)/255,h=o.getUint8(c+9)/255);let d=new t,w=new Float32Array(9*i),x=new Float32Array(9*i);for(let p=0;p<i;p++){let m=84+50*p,F=o.getFloat32(m,!0),U=o.getFloat32(m+4,!0),b=o.getFloat32(m+8,!0);if(a){let L=o.getUint16(m+48,!0);(32768&L)==0?(l=(31&L)/31,$=(L>>5&31)/31,s=(L>>10&31)/31):(l=f,$=g,s=_)}for(let y=1;y<=3;y++){let S=m+12*y,T=9*p+(y-1)*3;w[T]=o.getFloat32(S,!0),w[T+1]=o.getFloat32(S+4,!0),w[T+2]=o.getFloat32(S+8,!0),x[T]=F,x[T+1]=U,x[T+2]=b,a&&(u[T]=l,u[T+1]=$,u[T+2]=s)}}return d.setAttribute("position",new e(w,3)),d.setAttribute("normal",new e(x,3)),a&&(d.setAttribute("color",new e(u,3)),d.hasColors=!0,d.alpha=h),d}($)}}export{STLLoader};
